<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <groupId>scalag</groupId>
   <artifactId>scalag</artifactId>
   <version>1.0-SNAPSHOT</version>
   <name>${project.artifactId}</name>
   <description>My wonderfull scala app</description>
   <inceptionYear>2010</inceptionYear>
   <licenses>
      <license>
         <name>My License</name>
         <url>http://....</url>
         <distribution>repo</distribution>
      </license>
   </licenses>

   <properties>
      <maven.compiler.source>1.6</maven.compiler.source>
      <maven.compiler.target>1.6</maven.compiler.target>
      <encoding>UTF-8</encoding>
      <scala.version>2.10.3</scala.version>
      <scala.artifactId>2.10</scala.artifactId>
   </properties>

   <repositories>
      <repository>
         <id>spray</id>
         <name>Spray.io Repository</name>
         <url>http://repo.spray.io</url>
      </repository>
      <repository>
         <id>spray-nightlies</id>
         <name>Spray.io Nightly Repository</name>
         <url>http://nightlies.spray.io</url>
      </repository>
   </repositories>

   <!--
     <pluginRepositories>
       <pluginRepository>
         <id>scala-tools.org</id>
         <name>Scala-Tools Maven2 Repository</name>
         <url>http://scala-tools.org/repo-releases</url>
       </pluginRepository>
     </pluginRepositories>
   -->
   <dependencies>
      <dependency>
         <groupId>org.scala-lang</groupId>
         <artifactId>scala-library</artifactId>
         <version>${scala.version}</version>
      </dependency>
      <dependency>
         <groupId>org.scala-lang</groupId>
         <artifactId>scala-compiler</artifactId>
         <version>${scala.version}</version>
      </dependency>
      <dependency>
         <groupId>org.scala-lang.modules</groupId>
         <artifactId>scala-async_${scala.artifactId}</artifactId>
         <version>0.9.0-M4</version>
      </dependency>
      <dependency>
         <groupId>com.netflix.rxjava</groupId>
         <artifactId>rxjava-scala</artifactId>
         <version>0.15.0</version>
      </dependency>

      <dependency>
         <groupId>org.scalaz</groupId>
         <artifactId>scalaz-core_${scala.artifactId}</artifactId>
         <version>7.0.0</version>
      </dependency>

      <dependency>
         <groupId>io.spray</groupId>
         <artifactId>spray-can</artifactId>
         <version>1.1-20130507</version>
      </dependency>
      <dependency>
         <groupId>com.typesafe.akka</groupId>
         <artifactId>akka-actor_${scala.artifactId}</artifactId>
         <version>2.1.2</version>
      </dependency>
      <dependency>
         <groupId>org.scala-lang</groupId>
         <artifactId>scala-pickling_${scala.artifactId}</artifactId>
         <version>0.8.0-SNAPSHOT</version>
      </dependency>
      <dependency>
         <groupId>org.jboss.marshalling</groupId>
         <artifactId>jboss-marshalling</artifactId>
         <version>1.4.4.Final</version>
      </dependency>
      <dependency>
         <groupId>org.jboss.marshalling</groupId>
         <artifactId>jboss-marshalling-river</artifactId>
         <version>1.4.4.Final</version>
      </dependency>

      <!-- Test -->
      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <version>4.8.1</version>
      </dependency>
      <!--<dependency>-->
      <!--<groupId>org.scala-tools.testing</groupId>-->
      <!--<artifactId>specs_${scala.artifactId}</artifactId>-->
      <!--<version>1.9.1</version>-->
      <!--</dependency>-->
      <dependency>
         <groupId>org.scalatest</groupId>
         <artifactId>scalatest_${scala.artifactId}</artifactId>
         <version>2.0</version>
      </dependency>
      <dependency>
         <groupId>org.jmock</groupId>
         <artifactId>jmock-junit4</artifactId>
         <version>2.5.1</version>
      </dependency>

      <dependency>
         <groupId>joda-time</groupId>
         <artifactId>joda-time</artifactId>
         <version>2.1</version>
      </dependency>
      <dependency>
         <groupId>org.joda</groupId>
         <artifactId>joda-convert</artifactId>
         <version>1.3</version>
      </dependency>
      <dependency>
         <groupId>com.typesafe</groupId>
         <artifactId>config</artifactId>
         <version>1.2.0</version>
      </dependency>

   </dependencies>

   <build>
      <sourceDirectory>src/main/scala</sourceDirectory>
      <testSourceDirectory>src/test/scala</testSourceDirectory>
      <plugins>
         <plugin>
            <groupId>org.scala-tools</groupId>
            <artifactId>maven-scala-plugin</artifactId>
            <version>2.15.0</version>
            <executions>
               <execution>
                  <goals>
                     <goal>compile</goal>
                     <goal>testCompile</goal>
                  </goals>
                  <configuration>
                     <args>
                        <arg>-make:transitive</arg>
                        <arg>-dependencyfile</arg>
                        <arg>${project.build.directory}/.scala_dependencies
                        </arg>
                     </args>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>2.6</version>
            <configuration>
               <useFile>false</useFile>
               <disableXmlReport>true</disableXmlReport>
               <!-- If you have classpath issue like NoDefClassError,... -->
               <!-- useManifestOnlyJar>false</useManifestOnlyJar -->
               <includes>
                  <include>**/*Test.*</include>
                  <include>**/*Suite.*</include>
               </includes>
            </configuration>
         </plugin>
      </plugins>
   </build>
</project>
